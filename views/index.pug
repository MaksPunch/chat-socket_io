head 
    title socket.io chat 
    link(rel='stylesheet' href='style.css')
    script(type='module' src='popup.js')
body 
    nav(role='navigation')
            div#menuToggle
                input(type='checkbox')
                span
                span 
                span 
                ul#menu
                    a(href='/timer') 
                        li timer
                    a#changeUsername
                        li change username
                    a
                        select#rooms
                            option room 1
                            option room 2
                            option room 3
                        li#changeRoom change room
    div#room_index room 1
                    
    ul#messages 
    form#form(action='')
        button(id='user') Anonymus
        input#input(placeholder='Say Something...' autocomplete='off')
        .trigger_container
            img#trigger(src='img/emojipicker.png')
        input#button(type='submit' value='Отправить')
     
    script(src='/socket.io/socket.io.js')
    script.
        let socket = io();
        let messages = document.getElementById('messages');
        let form = document.getElementById('form');
        let input = document.getElementById('input');
        let username = window.prompt("Enter the username");
        if (username) {
            const users = !{JSON.stringify(users)};
            const userFound = users.find(el => el.nickname === username);
            if (userFound) {
                socket.emit('user login', username);
                alert('Welcome back, ' + username + '!')
            }
            else {
                socket.emit('signup', username)
                alert('Thank you for signing in, ' + username + '!')
            }
        } else {
            socket.emit('user not logged in')
            alert('You are not authorized, you will be an Anonymus for this session')
            username = 'Anonymus'
        }
        socket.emit('user connected', username)
        document.getElementById('user').textContent = username;
        socket.on('user logged in', (data) => {
            let item = document.createElement('p')
            item.style.color = '#fff'
            item.textContent = `${data.name} connected to ${data.room}`
            item.style.textAlign = 'center'
            messages.append(item)
        })

        socket.on('user disconnected', (data) => {
            let item = document.createElement('p')
            item.style.color = '#c41e3a'
            item.textContent = `${data} disconnected`
            item.style.textAlign = 'center'
            messages.append(item)
        })

        form.addEventListener('submit', function (e) {
            e.preventDefault();
            if (input.value != "") {
                socket.emit('messageFromClient', input.value);
                input.value = '';
            }
        });

        socket.on('messageFromServer', function (data) {
            let item = document.createElement('li')
            let message = document.createElement('div');
            let user = document.createElement('div')
            message.textContent = data.message;
            user.textContent = data.user;
            item.appendChild(user);
            item.appendChild(message);
            messages.appendChild(item)
            window.scrollTo(0, document.body.scrollHeight);
        });

        let trigger_container = document.querySelector('.trigger_container');
        let trigger = document.querySelector('#trigger')
        trigger_container.onmouseover = () => {
            trigger.style.width = "35px";
            trigger.style.height = "35px";
        }
        trigger_container.onmouseout = () => {
            trigger.style.width = "40px";
            trigger.style.height = "40px";
        }

        let changeUsername_btn = document.querySelector('#changeUsername');
        changeUsername_btn.addEventListener('click', () => {
            let new_username = prompt('New Username')
            if (new_username) {
                socket.emit('new username', new_username)
                alert(`old username: ${username}
                new username: ${new_username}`)
            } else {
                alert("You didn't change the username, you're still anonymus")
                new_username = 'Anonymus'
            }
            document.getElementById('user').textContent = new_username;
        })

        socket.on('user changed username', (data) => {
            let item = document.createElement('p')
            item.style.color = '#ffba00'
            item.textContent = `${data.old} changed username to ${data.new}`
            item.style.textAlign = 'center'
            messages.append(item)
        })
        
        let changeRoom_btn = document.querySelector('#changeRoom');
        let room_selection = document.querySelector('#rooms')
        changeRoom_btn.addEventListener('click', () => {
            let room = room_selection.value
            socket.emit('change room', room)
        })

        socket.on('room changed', (data) => {
            document.querySelector('#room_index').textContent = data.room;
            let item = document.createElement('p')
            item.style.color = '#fff'
            item.textContent = `${data.name} connected to ${data.room}`
            item.style.textAlign = 'center'
            messages.append(item)
        })

        socket.on('room left', (data) => {
            let item = document.createElement('p')
            item.style.color = '#fff'
            item.textContent = `${data.name} left the ${data.room}`
            item.style.textAlign = 'center'
            messages.append(item)
        })